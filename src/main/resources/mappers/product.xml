<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.mandarin_shop_back.repository.ProductMapper">
    <resultMap id="ProductResultMap" type="com.example.mandarin_shop_back.entity.product.Product">
        <id property="productId" column="product_id"/>
        <result property="productName" column="product_name"/>
        <result property="categoryId" column="category_id"/>
        <result property="categoryName" column="category_name" />
        <result property="productPrice" column="product_price"/>
        <result property="productImg" column="product_img"/>
        <result property="optionTitleId" column="option_title_id"/>
        <result property="titleName" column="title_name"/>
        <result property="optionNameId" column="option_name_id"/>
        <result property="optionName" column="option_name"/>
        <result property="productDescription" column="product_description"/>
        <result property="createDate" column="create_date" />
        <result property="updateDate" column="update_date" />
    </resultMap>

    <resultMap id="CategoryResultMap" type="com.example.mandarin_shop_back.entity.product.Category">
        <id property="categoryId" column="category_id" />
        <result property="categoryName" column="category_name" />
    </resultMap>

    <insert id="saveProduct" parameterType="com.example.mandarin_shop_back.entity.product.Product">
        insert into product_tb
        values(
        0,
        #{productName},
        #{categoryId},
        #{productPrice},
        #{productImg},
        #{productDescription},
        now(),
        now()
        )
    </insert>

    <select id="getProducts" resultMap="ProductResultMap">
        SELECT
        pt.product_id,
        pt.product_name,
        pt.product_price,
        pt.product_img,
        pt.product_description,
        ct.category_id,
        ct.category_name,
        ott.title_name,
        ont.option_name,
        ott.option_title_id,
        ont.option_name_id
        FROM
        product_tb pt
        LEFT OUTER JOIN
        category_tb ct ON (ct.category_id = pt.category_id)
        LEFT OUTER JOIN
        option_title_tb ott ON (ott.product_id = pt.product_id)
        LEFT OUTER JOIN
        option_name_tb ont ON (ont.option_title_id = ott.option_title_id)

    </select>

    <select id="getProductCategory" resultMap="ProductResultMap">
        SELECT
        pt.product_id,
        pt.product_name,
        pt.product_price,
        pt.product_img,
        pt.product_description,
        ct.category_id,
        ct.category_name
        FROM
        product_tb pt
        LEFT OUTER JOIN
        category_tb ct
        ON
        ct.category_id = pt.category_id
        where
        pt.category_id = #{categoryId}
    </select>

    <select id="getProductDetail" resultMap="ProductResultMap">
        SELECT
            pt.product_id,
            pt.product_name,
            pt.product_price,
            pt.product_img,
            pt.product_description,
            pt.category_id,
            ct.category_name,
            ott.title_name,
            ott.option_title_id,
            ont.option_name_id,
            ont.option_name,
            pt.create_date,
            pt.update_date
        FROM
        product_tb pt
            LEFT OUTER JOIN category_tb ct ON ct.category_id = pt.category_id
            LEFT OUTER JOIN option_title_tb ott ON ott.product_id = pt.product_id
            LEFT OUTER JOIN option_name_tb ont ON ont.option_title_id = ott.option_title_id
        WHERE
            pt.product_id = #{productId}
    </select>

    <update id="updateProduct">
        update
        product_tb
        set
        product_name = #{productName},
        product_price = #{productPrice},
        product_img = #{productImg},
        product_description = #{productDescription},
        category_id = #{categoryId},
        update_date = now()
        where
        product_id = #{productId}
    </update>

    <delete id="deleteProduct" parameterType="int">
        delete
        from
        product_tb
        where
        product_id = #{productId}
    </delete>

    <insert id="saveProductCategory" parameterType="com.example.mandarin_shop_back.entity.product.Category" >
        insert into
        category_tb
        values
        (0, #{categoryName}, now(), now())
    </insert>

    <update id="updateProductCategory">
        update
        category_tb
        set
        category_name = #{categoryName},
        update_date = now()
        where
        category_id = #{categoryId}
    </update>

    <delete id="deleteProductCategory">
        delete from
        category_tb
        where
        category_id = #{categoryId}
    </delete>

    <select id="getCategory" resultMap="CategoryResultMap">
        select
        *
        from
        category_tb
    </select>

</mapper>